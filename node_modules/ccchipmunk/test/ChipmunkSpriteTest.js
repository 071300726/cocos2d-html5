var ChipmunkSpriteTest = cc.Layer.extend({
    init : function(){
        this._super();
        winSize = cc.Director.getInstance().getWinSize();
        this.initPhysics();
        return true;
    },

    initPhysics : function(){
        this.space = new cp.Space();
        var space = this.space ;
        var staticBody = space.staticBody;

        // Walls
        var walls = [ new cp.SegmentShape( staticBody, cp.v(0,0), cp.v(winSize.width,0), 0 ),				// bottom
            new cp.SegmentShape( staticBody, cp.v(0,winSize.height), cp.v(winSize.width,winSize.height), 0),	// top
            new cp.SegmentShape( staticBody, cp.v(0,0), cp.v(0,winSize.height), 0),				// left
            new cp.SegmentShape( staticBody, cp.v(winSize.width,0), cp.v(winSize.width,winSize.height), 0)	// right
        ];
        for( var i=0; i < walls.length; i++ ) {
            var shape = walls[i];
            shape.setElasticity(1);
            shape.setFriction(1);
            space.addStaticShape( shape );
        }

        this.scheduleUpdate();
        for(var i=0; i<10; i++) {
            this.addSprite( cp.v(winSize.width/2, winSize.height/2) );
        }

        // Gravity
        space.gravity = cp.v(0, -100);
    },

    addSprite : function(pos){
        var body = new cp.Body(1, cp.momentForBox(1, 48, 108));
        body.setPos(pos);
        this.space.addBody( body );
        var shape = new cp.BoxShape( body, 48, 108);
        shape.setElasticity( 0.5 );
        shape.setFriction( 0.5 );
        this.space.addShape( shape );

        var sprite = cc.PhysicsSprite.create(res.grossini_png);
        sprite.setBody( body );
        this.addChild( sprite );
    }
});
ChipmunkSpriteTest.create = function(args){
    var layer = new ChipmunkSpriteTest();
    layer.init();
    return layer;
};